# BMAD Project Configuration - Viral Video Generator

project:
  name: "Viral Video Generator Engine"
  code: "VVG"
  type: "fullstack"
  domain: "video-processing"
  version: "1.0.0"

team:
  agents:
    - analyst
    - pm
    - architect
    - scrum-master
    - senior-dev
    - qa
    - devops

technology:
  stack:
    runtime: "Node.js"
    language: "TypeScript"
    framework: "Custom"
    database: "SQLite"
    cache: "In-Memory/Disk"
  
  external_services:
    - name: "ElevenLabs"
      type: "TTS API"
      purpose: "Voice synthesis"
    
    - name: "OpenAI"
      type: "AI API"
      purpose: "Script generation and TTS"
    
    - name: "Pexels"
      type: "Media API"
      purpose: "Stock videos and images"
    
    - name: "Pixabay"
      type: "Media API"
      purpose: "Fallback media source"
  
  core_dependencies:
    - ffmpeg: "Video processing"
    - sharp: "Image processing"
    - winston: "Logging"
    - commander: "CLI"
    - jest: "Testing"

architecture:
  pattern: "Modular Pipeline"
  style: "Event-Driven"
  
  modules:
    - name: "Script Generator"
      type: "core"
      responsibility: "Generate video scripts from templates"
    
    - name: "Media Sourcer"
      type: "core"
      responsibility: "Find and download stock media"
    
    - name: "Audio Processor"
      type: "core"
      responsibility: "Generate and mix audio tracks"
    
    - name: "Video Compositor"
      type: "core"
      responsibility: "Assemble final video output"
    
    - name: "Text Renderer"
      type: "core"
      responsibility: "Create text overlays and animations"
    
    - name: "Batch Processor"
      type: "orchestration"
      responsibility: "Handle multiple video generation requests"

development:
  methodology: "Agile/BMAD"
  sprint_length: 1 # week
  
  phases:
    - phase: 1
      name: "Foundation"
      duration: "1 week"
      deliverables:
        - "Project setup and architecture"
        - "Core interfaces and models"
        - "Configuration system"
        - "Logging infrastructure"
    
    - phase: 2
      name: "Core Implementation"
      duration: "2 weeks"
      deliverables:
        - "Script generation engine"
        - "Media sourcing system"
        - "Audio processing"
        - "Video composition"
    
    - phase: 3
      name: "Integration & Polish"
      duration: "1 week"
      deliverables:
        - "CLI interface"
        - "Batch processing"
        - "Testing suite"
        - "Documentation"

quality:
  testing:
    unit_coverage: 80
    integration_coverage: 70
    e2e_tests: true
  
  code_standards:
    linting: "ESLint"
    formatting: "Prettier"
    type_checking: "strict"
  
  performance:
    video_generation_time: "< 2 minutes"
    batch_size: "100+ videos"
    success_rate: "> 95%"

deployment:
  environments:
    - development
    - testing
    - production
  
  requirements:
    node_version: "20+"
    ffmpeg_version: "6.0+"
    ram: "4GB minimum"
    storage: "50GB recommended"

risks:
  technical:
    - risk: "API rate limiting"
      mitigation: "Implement caching and queuing"
    
    - risk: "Media availability"
      mitigation: "Multiple provider fallbacks"
    
    - risk: "Processing bottlenecks"
      mitigation: "Parallel processing and resource pooling"
  
  business:
    - risk: "Platform policy changes"
      mitigation: "Flexible output configuration"
    
    - risk: "Cost overruns from APIs"
      mitigation: "Usage monitoring and limits"

success_criteria:
  - "Generate high-quality videos in under 2 minutes"
  - "Support batch processing without failures"
  - "Maintain consistent output quality"
  - "Easy template customization"
  - "Cost-effective API usage"